{"version":3,"sources":["./src/app/modules/country-detail/country-detail.module.ts","./src/app/modules/country-detail/country-detail-routing.module.ts","./src/app/modules/country-detail/country-detail.component.ts","./src/app/modules/country-detail/country-detail.component.html"],"names":[],"mappings":"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","file":"modules-country-detail-country-detail-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { CountryDetailRoutingModule } from './country-detail-routing.module';\nimport { CountryDetailComponent } from './country-detail.component';\n\n\n@NgModule({\n  declarations: [CountryDetailComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CountryDetailRoutingModule\n  ]\n})\nexport class CountryDetailModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CountryDetailComponent } from './country-detail.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CountryDetailComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CountryDetailRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { CountryService } from '@data/api';\nimport { Country } from '@data/interfaces';\n\nimport { LoadingService } from '@shared/services';\n\n@Component({\n  selector: 'app-country-detail',\n  templateUrl: './country-detail.component.html'\n})\nexport class CountryDetailComponent implements OnInit, OnDestroy {\n  country: Country;\n  isLoading: boolean;\n  paramsSubscription: Subscription;\n  countrySubscription: Subscription;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private loadingService: LoadingService,\n    private countriesService: CountryService\n  ) { }\n\n  ngOnInit(): void {\n    this.paramsSubscription = this.activatedRoute.params\n      .subscribe((params) => {\n        this.getCountry(params.country);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.paramsSubscription.unsubscribe();\n    this.countrySubscription.unsubscribe();\n  }\n\n  showLoadingIndicator(isShow: boolean): void {\n    this.isLoading = isShow;\n    this.loadingService.setShowLoadingIndicator(isShow);\n  }\n\n  getCountry(country: string): void {\n    this.country = null;\n    this.showLoadingIndicator(true);\n\n    this.countrySubscription = this.countriesService.searchByCountry(country)\n      .pipe(finalize(() => (this.showLoadingIndicator(false))))\n      .subscribe(countries => {\n        if (countries.length === 1) {\n          this.country = countries[0];\n          console.log(this.country);\n        }\n      });\n  }\n\n}\n","<div class=\"country-detail\">\n  <button class=\"country-detail__button\" routerLink=\"/\">\n    <svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M8.22305 12.6631L3.93005 8.37009H13.5161V6.37009H3.93005L8.22305 2.07709L6.80905 0.663086L0.102051 7.37009L6.80905 14.0771L8.22305 12.6631Z\" fill=\"black\"/>\n    </svg>\n    <span>Back</span>\n  </button>\n\n  <img class=\"country-detail__flag\" [src]=\"country.flag\" [alt]=\"country.name\" loading=\"lazy\"  *ngIf=\"country\">\n\n  <section class=\"country-detail__info\" *ngIf=\"country\">\n    <h2 class=\"country-detail__title\">{{ country.name }}</h2>\n\n    <div class=\"country-detail__left\">\n      <p class=\"country-detail__text\"><span class=\"country-detail__text--bold\">Native Name:</span> {{ country.nativeName }}</p>\n      <p class=\"country-detail__text\"><span class=\"country-detail__text--bold\">Population:</span> {{ country.population }}</p>\n      <p class=\"country-detail__text\"><span class=\"country-detail__text--bold\">Region:</span> {{ country.region }}</p>\n      <p class=\"country-detail__text\"><span class=\"country-detail__text--bold\">Sub Region:</span> {{ country.subregion }}</p>\n      <p class=\"country-detail__text\"><span class=\"country-detail__text--bold\">Capital:</span> {{ country.capital }}</p>\n    </div>\n\n    <div class=\"country-detail__right\">\n      <p class=\"country-detail__text\"><span class=\"country-detail__text--bold\">Top Level Domain:</span> {{ country.topLevelDomain }}</p>\n      <p class=\"country-detail__text\">\n        <span class=\"country-detail__text--bold\">Currencies: </span>\n        <span *ngFor=\"let currency of country.currencies; let i = index\">{{ currency.name }}{{ (i + 1) === country.currencies.length ? '' : ', ' }}</span>\n      </p>\n      <p class=\"country-detail__text\">\n        <span class=\"country-detail__text--bold\">Languages: </span>\n        <span *ngFor=\"let language of country.languages; let i = index\">{{ language.name }}{{ (i + 1) === country.languages.length ? '' : ', ' }}</span>\n      </p>\n    </div>\n\n    <div class=\"country-detail__border-countries\">\n      <p class=\"country-detail__text country-detail__text--bold\">Border Countries:</p>\n      <div class=\"country-detail__border-country\" *ngFor=\"let border of country.borders; let i = index\">{{ border }}</div>\n    </div>\n  </section>\n\n  <app-not-found class=\"country-detail__empty\" *ngIf=\"!country && !isLoading\"></app-not-found>\n</div>\n"],"sourceRoot":"webpack:///"}